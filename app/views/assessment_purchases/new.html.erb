<% assessment_id = params[:assessment_id] || Assessment.first.id %>
<%= content_for(:head) do %>
  <%- # FIXME (cmhobbs) remove stripe references.  this sould be on its own anyway %>
  <script type="text/javascript" src="https://js.stripe.com/v1/"></script>
<script type="text/javascript">
Stripe.setPublishableKey('<%= PUBLISHABLE_STRIPE_KEY %>');
$(document).ready(function() {
    function addInputNames() {
    // Not ideal, but jQuery's validate plugin requires fields to have names
    // so we add them at the last possible minute, in case any javascript 
    // exceptions have caused other parts of the script to fail.
    $(".card-number").attr("name", "card-number")
    $(".card-cvc").attr("name", "card-cvc")
    $(".card-expiry-year").attr("name", "card-expiry-year")
    }

    function removeInputNames() {
    $(".card-number").removeAttr("name")
    $(".card-cvc").removeAttr("name")
    $(".card-expiry-year").removeAttr("name")
    }

    function submit(form) {
    // remove the input field names for security
    // we do this *before* anything else which might throw an exception
    removeInputNames(); // THIS IS IMPORTANT!

    // given a valid form, submit the payment details to stripe
    $(form['submit-button']).attr("disabled", "disabled")

      Stripe.createToken({
number: $('.card-number').val(),
cvc: $('.card-cvc').val(),
exp_month: $('.card-expiry-month').val(), 
exp_year: $('.card-expiry-year').val()
}, function(status, response) {
if (response.error) {
// re-enable the submit button
$(form['submit-button']).removeAttr("disabled")

// show the error
$(".payment-errors").html(response.error.message);

// we add these names back in so we can revalidate properly
addInputNames();
} else {
// token contains id, last4, and card type
var token = response['id'];

// insert the stripe token
var input = $("<input name='stripeToken' value='" + token + "' style='display:none;' />");
form.appendChild(input[0])

  // and submit
  form.submit();
}
});

return false;
}

// add custom rules for credit card validating
jQuery.validator.addMethod("cardNumber", Stripe.validateCardNumber, "Please enter a valid card number");
jQuery.validator.addMethod("cardCVC", Stripe.validateCVC, "Please enter a valid security code");
jQuery.validator.addMethod("cardExpiry", function() {
    return Stripe.validateExpiry($(".card-expiry-month").val(), 
      $(".card-expiry-year").val())
    }, "Please enter a valid expiration");

// We use the jQuery validate plugin to validate required params on submit
$("#example-form").validate({
submitHandler: submit,
rules: {
"card-cvc" : {
cardCVC: true,
required: true
},
"card-number" : {
cardNumber: true,
required: true
},
"card-expiry-year" : "cardExpiry" // we don't validate month separately
}
});

// adding the input field names is the last step, in case an earlier step errors                
addInputNames();
});
</script>
<% end %>
<div class="container">
  <div class="row">
    <div class="span8 center">
      <h4><span><%= image_tag "lockicon_purchase.png", :alt =>'lockicon_purchase' %></span>serve2performÂ® Assessment Checkout 
        <span class="exit">
          <%= link_to :back do  %>
            <%= image_tag "exit.png" , :alt =>'exit'%>
        <% end %></span>          
      </h4>

      <%= form_tag assessment_purchases_path, :id => 'example-form', :style => 'display:none;' do %>
        <%= hidden_field_tag 'assessment_id', assessment_id%>
      <h4 class="total">Total <span><%= number_to_currency(Assessment.find(assessment_id).price)%></span></h5>
      <h4 class="heading">Credit Card Information</h5>
      <div class="form-row">
        <%= label_tag "name", "Your Name" %>
        <%= text_field_tag 'name', current_user.name, :class => 'input required user_name', :placeholder =>"" %>
      </div>

      <div class="form-row">
        <%= label_tag "email", "Email" %>
        <%= text_field_tag 'email', current_user.email, :class => 'required email', :placeholder =>"" %>
      </div>            

      <div class="form-row">
        <%= label_tag "card-number", "Card Number" %>
        <input type="text" maxlength="16" autocomplete="off" class="card-number stripe-sensitive required card-number" placeholder="" />
      </div>

      <div class="form-row">
        <div class="expiry-wrapper">
          <label class="exp-date">Expiration Month
            <div class="styled-select">
              <select class="card-expiry-month stripe-sensitive required">
              </select>
            </div>
            <script type="text/javascript">
var select = $(".card-expiry-month"),
    month = new Date().getMonth() + 1;
for (var i = 1; i <= 12; i++) {
  select.append($("<option value='"+i+"' "+(month === i ? "selected" : "")+">"+i+"</option>"))
}
            </script>
          </label>
          <label class="exp-date">Expiration Year
            <div class="styled-select">
              <select class="card-expiry-year stripe-sensitive required">
              </select>
            </div>
          </label>
          <script type="text/javascript">
var select = $(".card-expiry-year"),
    year = new Date().getFullYear();

for (var i = 0; i < 12; i++) {
  select.append($("<option value='"+(i + year)+"' "+(i === 0 ? "selected" : "")+">"+(i + year)+"</option>"))
}
          </script>

          <label>CVC
            <input type="text" maxlength="4" autocomplete="off" class="card-cvc stripe-sensitive required" placeholder="" />
          </label>
        </div>
      </div>

      <div class="form-row last">
        <button type="submit" name="submit-button" class="submit_button roundedge">Submit Order</button>
        <div class="cancel button"><%= link_to 'Cancel', :back  %></div>
      </div>
      <span class="payment-errors"></span>
    </div>
  </div>
</div>
<% end %>


<!-- 
    The easiest way to indicate that the form requires JavaScript is to show
    the form with JavaScript (otherwise it will not render). You can add a
    helpful message in a noscript to indicate that users should enable JS.
-->
<script>if (window.Stripe) $("#example-form").show()</script>
<noscript><p>JavaScript is required for the registration form.</p></noscript>
